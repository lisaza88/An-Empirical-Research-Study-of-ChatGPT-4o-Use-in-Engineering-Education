import os
import json
from tqdm import tqdm
import spacy

nlp = spacy.load("en_core_web_sm")

INPUT_FILE = "data/merged_data/with_copy_paste_score.json"
OUTPUT_FILE = "data/merged_data/with_structural_similarity.json"

with open(INPUT_FILE, "r", encoding="utf-8") as f:
    data = json.load(f)

target_deps = {"advcl", "relcl", "ccomp", "xcomp", "conj", "acl"}

def extract_structure_profile(text):
    doc = nlp(text)
    return [token.dep_ for token in doc if token.dep_ in target_deps]

def compute_ss_score(response_text, student_text):
    response_deps = extract_structure_profile(response_text)
    student_deps = extract_structure_profile(student_text)

    if not response_deps or not student_deps:
        return 0

    matches = sum(1 for dep in response_deps if dep in student_deps)
    return min((matches / len(response_deps)) * 100, 100)

for record in tqdm(data, desc="Computing SS Score"):
    response = record.get("response_block", "")
    student_text = record.get("assignment_text", "")

    ss = compute_ss_score(response, student_text)
    record["structural_similarity_score"] = round(ss, 2)

with open(OUTPUT_FILE, "w", encoding="utf-8") as f:
    json.dump(data, f, ensure_ascii=False, indent=2)
